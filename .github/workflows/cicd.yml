# Workflow configuration for the KYCS application
name: kycs application

# Trigger workflow on push and pull requests to the main branch
on:
  push:
    branches: [ "main" ]                    # Trigger when pushing to "main"
  pull_request:
    branches: [ "main" ]                    # Trigger when a PR is created/updated for "main"

# Define jobs & Build job
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code                       # Step 1: Checkout the repository code
      uses: actions/checkout@v4

    - name: Set up Python 3.11                  # Step 2: Set up Python 3.11
      uses: actions/setup-python@v3 
      with:
        python-version: "3.11"

    - name: Install dependencies                # Step 3: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r website/requirements.txt
        pip install flake8 pytest 

    - name: Lint with flake8                    # Step 4: Lint the code using flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 website/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 website/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest                  # Step 5: Run tests using pytest
      run: |
        pytest website/

  # Build and publish Docker image
  build-and-publish:
    needs: build                              # This job depends on the successful completion of the `build` job
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code                     # Step 1: Checkout the repository code
      uses: actions/checkout@v4

    - name: Set up Docker                     # Step 2: Set up Docker Buildx for building Docker images
      uses: docker/setup-buildx-action@v2
      with:
        version: latest

    - name: Login to DockerHub                # Step 3: Log in to Docker Hub using secrets for authentication
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build AND PUSH Docker image       # Step 4: Build and push the Docker image to Docker Hub
      uses: docker/build-push-action@v4
      with:
        context: ./website
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flask-kycs-app:latest

    - name: Image digest                      # Step 5: Output the Docker image digest (a unique identifier for the built image -  it ensures that the image is unique. ex: sha256:3f5f8b7a.....)
      run: echo ${{ steps.build-and-publish.outputs.digest }}
